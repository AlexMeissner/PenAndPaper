@page "/campaign/{campaignId:int}"
@rendermode InteractiveServer

@using Website.Components.Controls
@using Website.Services
@using Website.Services.API

@inject ICampaignOverviewApi CampaignOverviewApi
@inject IIdentityProvider IdentityProvider

<div class="master-panel">
    <div class="left-panel">
        <Map CampaignId="@CampaignId"></Map>
        @if (_isGamemaster)
        {
            <button class="btn btn-overlay btn-map" @onclick="ToggleMapSelection">
                <i class="bi bi-map"></i>
            </button>
            <button class="btn btn-overlay btn-sound">
                <i class="bi bi-music-note-beamed"></i>
            </button>
            <button class="btn btn-overlay btn-grid" type="button" data-bs-toggle="offcanvas"
                    data-bs-target="#offcanvasRight" aria-controls="offcanvasRight">
                <i class="bi bi-grid-3x3"></i>
            </button>

            <MapSelection CampaignId="@CampaignId" @ref="_mapSelection"/>
        }

        <button class="btn btn-overlay btn-dice" @onclick="ToggleDiceRoller">
            <i class="bi bi-dice-6"></i>
        </button>

        <DiceRoller CampaignId="@CampaignId" @ref="_diceRoller"/>
        <DiceRollVisualizer/>
    </div>
    <div class="right-panel">
        <!-- https://www.w3schools.com/howto/tryit.asp?filename=tryhow_js_tabs_close -->
        <div class="tab">
            <button class="@GetTabStyle(TabIndex.Chat)" @onclick="() => ActiveTab(TabIndex.Chat)">Chat</button>

            @if (_isGamemaster)
            {
                <button class="@GetTabStyle(TabIndex.Script)" @onclick="() => ActiveTab(TabIndex.Script)">Skript
                </button>
                <button class="@GetTabStyle(TabIndex.Characters)" @onclick="() => ActiveTab(TabIndex.Characters)">
                    Charaktere
                </button>
                <button class="@GetTabStyle(TabIndex.Monsters)" @onclick="() => ActiveTab(TabIndex.Monsters)">Monster
                </button>
            }
            else
            {
                <button class="@GetTabStyle(TabIndex.Character)" @onclick="() => ActiveTab(TabIndex.Character)">
                    Charakter
                </button>
            }
        </div>

        <div class="tab-content">
            @switch (_activeTabIndex)
            {
                case TabIndex.Script:
                    <Script CampaignId="@CampaignId"></Script>
                    break;

                case TabIndex.Chat:
                    <Chat CampaignId="@CampaignId"></Chat>
                    break;

                case TabIndex.Character:
                    <Character CampaignId="@CampaignId"></Character>
                    break;

                case TabIndex.Characters:
                    <Characters CampaignId="@CampaignId"></Characters>
                    break;

                case TabIndex.Monsters:
                    <Monsters></Monsters>
                    break;

                default:
                    throw new ArgumentOutOfRangeException();
            }
        </div>
    </div>
</div>

@if (_isGamemaster)
{
    <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel">
        <div class="offcanvas-header">
            <h5 id="offcanvasRightLabel">Grid Einstellungen</h5>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <div class="input-group mb-3">
                <span class="input-group-text">Aktiv</span>
                <div class="input-group-text">
                    <input class="form-check-input mt-0" type="checkbox">
                </div>
            </div>
            <div class="input-group mb-3">
                <span class="input-group-text">Farbe</span>
                <input type="color" class="form-control" value="#000000"/>
            </div>
            <div class="input-group mb-3">
                <span class="input-group-text">Größe</span>
                <input type="range" class="form-range form-control" min="0" max="100" step="1.0">
                <input type="number" class="form-control">
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int CampaignId { get; set; }

    private bool _isGamemaster;
    private TabIndex _activeTabIndex = TabIndex.Chat;

    private MapSelection? _mapSelection;
    private DiceRoller? _diceRoller;

    private enum TabIndex
    {
        Chat,
        Script,
        Character,
        Characters,
        Monsters
    }

    private void ActiveTab(TabIndex tabIndex)
    {
        _activeTabIndex = tabIndex;
    }

    private string GetTabStyle(TabIndex tabIndex)
    {
        return tabIndex == _activeTabIndex ? "active" : string.Empty;
    }

    private void ToggleDiceRoller()
    {
        _diceRoller?.Toggle();
    }

    private async Task ToggleMapSelection()
    {
        if (_mapSelection is not null)
        {
            await _mapSelection.Toggle();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var user = await IdentityProvider.GetUserAsync();

        var response = await CampaignOverviewApi.GetAsync(user.Id);

        response.Match(
            campaignOverview =>
            {
                // ToDo: Add a better endpoint for that request
                var campaign = campaignOverview.CampaignItems.FirstOrDefault(c => c.Id == CampaignId);
                _isGamemaster = campaign?.IsGamemaster ?? false;
            },
            errorCode =>
            {
                // ToDo: Log + Toast
                Console.WriteLine(errorCode);
            }
        );
    }

}