@page "/"
@rendermode InteractiveServer

@using ApiClient
@using DataTransfer.Campaign

@inject ICampaignApi CampaignApi
@inject IUserApi UserApi
@inject NavigationManager NavigationManager

<PageTitle>Pen & Paper Kampagnenauswahl</PageTitle>

<div class="background-image">
    <div class="centered-backdrop">
        <ul class="list-group">
            @foreach (var campaign in _campaigns)
            {
                <li class="list-group-item list-group-item-action campaign-item-level-0">
                    <a href="campaign/@campaign.Id" class="campaign-item-link campaign-item-level-0">
                        <div class="campaign-item-icon">
                            <img width="60" height="60" alt=""
                            src="https://pnghq.com/wp-content/uploads/dnd-dungeons-dragons-logo-transparent-background-png.png"/>
                        </div>
                        <div class="campaign-item-level-1">
                            <div class="campaign-item-header">@campaign.Name</div>
                            <div class="campaign-item-level-2">
                                <div class="campaign-item-sub-header">Spielleiter</div>
                                <div class="campaign-item-player-name">@campaign.GameMaster</div>
                            </div>
                            <div class="campaign-item-level-2">
                                <div class="campaign-item-sub-header">Spieler</div>
                                @foreach (var player in campaign.Players)
                                {
                                    <div class="campaign-item-player-name">@player</div>
                                }
                            </div>
                        </div>
                    </a>
                    @if (campaign.IsGameMaster)
                    {
                        <button type="button" class="btn btn-outline-primary btn-edit campaign-item-button"
                        @onclick="() => OnEdit(campaign.Id)">
                            <i class="bi bi-pencil"></i>
                        </button>
                    }
                </li>
            }
        </ul>

        <button type="button" class="btn btn-create btn-outline-success" @onclick="OnCreate">Erstellen</button>
    </div>
</div>

@code {
    private IEnumerable<CampaignsDto> _campaigns = [];

    protected override async Task OnInitializedAsync()
    {
        await Login();

        var response = await CampaignApi.GetAllAsync();

        _campaigns = response.Match<IEnumerable<CampaignsDto>>(
            cam => cam,
            statusCode =>
            {
                // ToDo: Toast
                return [];
            });
    }

    private async Task Login()
    {
        var response = await UserApi.Login();

        if (response.IsSuccess) return;

        response = await UserApi.Register();

        if (!response.IsSuccess)
        {
            // ToDo: Toast
            return;
        }

        response = await UserApi.Login();

        if (!response.IsSuccess)
        {
            // ToDo: Toast
        }
    }

    private void OnCreate()
    {
        NavigationManager.NavigateTo("campaignCreation");
    }

    private void OnEdit(int campaignId)
    {
        NavigationManager.NavigateTo($"campaignCreation/{campaignId}");
    }

}
