@page "/"
@rendermode InteractiveServer

@using DataTransfer.Campaign
@using Website.Services.API

@inject ICampaignOverviewApi campaignOverviewApi
@inject NavigationManager navigationManager

<div class="background-image">
    <div class="centered-backdrop">
        <ul class="list-group">
            @foreach (var campaign in campaignItems)
            {
                <li class="list-group-item list-group-item-action campaign-item-level-0">
                    <a href="campaign/@campaign.Id" class="campaign-item-link campaign-item-level-0">
                        <div class="campaign-item-icon">
                            <img width="60" height="60" src="https://pnghq.com/wp-content/uploads/dnd-dungeons-dragons-logo-transparent-background-png.png" />
                        </div>
                        <div class="campaign-item-level-1">
                            <div class="campaign-item-header">@campaign.Name</div>
                            <div class="campaign-item-level-2">
                                <div class="campaign-item-sub-header">Spielleiter</div>
                                <div class="campaign-item-player-name">@campaign.Gamemaster</div>
                            </div>
                            <div class="campaign-item-level-2">
                                <div class="campaign-item-sub-header">Spieler</div>
                                @foreach (var player in campaign.Characters)
                                {
                                    <div class="campaign-item-player-name">@player</div>
                                }
                            </div>
                        </div>
                    </a>
                    @if (campaign.IsGamemaster)
                    {
                        <button type="button" class="btn btn-outline-primary btn-edit campaign-item-button" @onclick="() => OnEdit(campaign.Id)">
                            <i class="bi bi-pencil"></i>
                        </button>
                    }
                </li>
            }
        </ul>

        <button type="button" class="btn btn-create btn-outline-success" @onclick="OnCreate">Erstellen</button>
    </div>
</div>

@code {
    // ToDo: Get correct user id
    private readonly int userId = 1;

    private ICollection<CampaignOverviewItemDto> campaignItems = [];

    protected override async Task OnInitializedAsync()
    {
        var response = await campaignOverviewApi.GetAsync(userId);

        response.Match(
            campaignOverview =>
            {
                campaignItems = campaignOverview.CampaignItems;
            },
            errorCode =>
            {
                // ToDo: Log + Toast
                Console.WriteLine(errorCode);
            }
        );
    }

    private void OnCreate()
    {
        navigationManager.NavigateTo("campaignCreation");
    }

    private void OnEdit(int campaignId)
    {
        // If campaignId is always the same value check https://www.telerik.com/blogs/how-to-pass-arguments-to-your-onclick-functions-blazor
        navigationManager.NavigateTo($"campaignCreation/{campaignId}");
    }
}
